// NB: Android Studio can't find the imports; this does not affect the
// actual build since Gradle can find them just fine.
// remove after upgrading to 'com.android.tools.build:gradle:8.1.0' (AGP 8.1)
import com.android.tools.profgen.ArtProfileKt
import com.android.tools.profgen.ArtProfileSerializer
import com.android.tools.profgen.DexFile

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {

    defaultConfig {
        applicationId "com.monistoWallet"
        compileSdk compile_sdk_version
        minSdkVersion min_sdk_version
        targetSdkVersion compile_sdk_version
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", true)
            }
        }
        vectorDrawables.useSupportLibrary = true
        lintOptions {
            checkReleaseBuilds false
        }

        resValue "string", "companyWebPageLink", "https://dexnet.one"
        resValue "string", "appWebPageLink", "https://dexnet.one"
        resValue "string", "analyticsLink", ""
        resValue "string", "appGithubLink", "https://github.com/DexSAFE"
        resValue "string", "appTwitterLink", "https://twitter.com/DexNet_one"
        resValue "string", "appTelegramLink", "https://t.me/dexnet"
        resValue "string", "appGmailLink", "support@dexsafe.io"
        resValue "string", "appRedditLink", "support@dexnet.one"
        resValue "string", "reportEmail", "support@dexnet.one"
        resValue "string", "releaseNotesUrl", "https://github.com/0xLabWallet/0xwallet-android"
        resValue "string", "walletConnectAppMetaDataName", "dexnet"
        resValue "string", "walletConnectAppMetaDataUrl", ""
        resValue "string", "walletConnectAppMetaDataIcon", "https://raw.githubusercontent.com/DexSAFE/Design/master/AppIcon.png"
        resValue "string", "accountsBackupFileSalt", "Wallet0x"
    }

    buildFeatures {
        compose true
        viewBinding true
    }

    signingConfigs {
        appCenter {
            storeFile file("./test.keystore")
            storePassword "testKeystore123"

            keyAlias "testKeystore"
            keyPassword "testKeystore123"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".dev"
            resValue "string", "cryptoCompareApiKey", "2b08fe1dba559ca6acf5e1897b6de8749cee0ace6052d7aa7fccf6aa9f1b3255"
            resValue "string", "infuraProjectId", "2a1306f1d12f4c109a4d4fb9be46b02e"
            resValue "string", "infuraSecretKey", "fc479a9290b64a84a15fa6544a130218"
            resValue "string", "defiyieldProviderApiKey", "bc3a9319-b115-4673-ace9-03228c11d026"
            resValue "string", "is_release", "false"
            resValue "string", "guidesUrl", "https://github.com/0xLabWallet/0xwallet-android"
            resValue "string", "faqUrl", "https://github.com/0xLabWallet/0xwallet-android"
            resValue "string", "coinsJsonUrl", "https://raw.githubusercontent.com/DexSAFE/cryptocurrencies/master/coins.json"
            resValue "string", "providerCoinsJsonUrl", "https://raw.githubusercontent.com/DexSAFE/cryptocurrencies/master/provider.coins.json"
            resValue "string", "oneInchApiKey", "ElyK7s22HR0JD78CEXVPnpZA8UyuUwIl"
            resValue "string", "blockchairApiKey", "M___unstoppn7jfFpe40X___________"
            resValue "string", "twitterBearerToken", "AAAAAAAAAAAAAAAAAAAAAJgeNwEAAAAA6xVpR6xLKTrxIA3kkSyRA92LDpA%3Da6auybDwcymUyh2BcS6zZwicUdxGtrzJC0qvOSdRwKLeqBGhwB"
            resValue "string", "uniswapGraphUrl", "https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2"
            resValue "string", "etherscanKey", "YK4KEA3TANM8KZ5J6E2Q1ZIM6YDM8TEABM"
            resValue "string", "bscscanKey", "Z6CQA95IAZ4GTJMQRG426IZZCJREEDFE5I"
            resValue "string", "polygonscanKey", "P9QEQHXSYFKM9KHR2TH8BGRAQU6T3M7UA4,DMGHPTPSZCE4V4SYMWTIK29CC1RIDTN7U9"
            resValue "string", "snowtraceApiKey", "47IXTRAAFT1E1J4RNSPZPNB5EWUIQR16FG"
            resValue "string", "optimisticEtherscanApiKey", "745EUI4781T147M9QJRNS5G3Q5NFF2SJXP"
            resValue "string", "arbiscanApiKey", "4QWW522BV13BJCZMXH1JIB2ESJ7MZTSJYI"
            resValue "string", "gnosisscanApiKey", "KEXFAQKDUENZ5U9CW3ZKYJEJ84ZIHH9QTY"
            resValue "string", "ftmscanApiKey", "JAWRPW27KEMVXMJJ9UKY63CVPH3X5V9SMP"
            resValue "string", "basescanApiKey", "QU4RJVJXQCW812J3234EW9EV815TA6XC55"
            resValue "string", "marketApiBaseUrl", "https://api.blocksdecoded.com"
            resValue "string", "marketApiKey", "IQf1uAjkthZp1i2pYzkXFDom"
            resValue "string", "openSeaApiKey", "bfbd6061a33e455c8581b594774fecb3"
            resValue "string", "walletConnectV2Key", "0c5ca155c2f165a7d0c88686f2113a72"
            resValue "string", "solscanApiKey", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjcmVhdGVkQXQiOjE2Nzk0NjQxMTQ0ODUsImVtYWlsIjoiaHNkYW84ODg4QGdtYWlsLmNvbSIsImFjdGlvbiI6InRva2VuLWFwaSIsImlhdCI6MTY3OTQ2NDExNH0.91DUjjjYu86f1ZMMJ5cyJxIKTTw_srhI-vNgYaTCPUU"
            resValue "string", "trongridApiKeys", "8f5ae2c8-8012-42a8-b0ca-ffc2741f6a29,578aa64f-a79f-4ee8-86e9-e9860e2d050a,1e92f1fc-41f8-401f-a7f6-5b719b6f1280"
            resValue "string", "udnApiKey", "r2phzgatt_zt9-hd_wyvdjrdsrimnxgokm7knyag1malzgcz"
            resValue "string", "oneInchApiKey", "3EttyCzgWb2GLFIRoPIUYM0M4uKAVEcq"
            resValue "string", "blocksDecodedEthereumRpc", "https://api.blocksdecoded.com/v1/ethereum-rpc/mainnet"
            resValue "string", "is_release", "false"
        }

        appcenterdebug {
            initWith debug
            defaultConfig.versionCode System.getenv("BUILD_NUMBER")?.toInteger() ?: defaultConfig.versionCode
            applicationIdSuffix ".dev.appcenter"
            signingConfig signingConfigs.appCenter
            matchingFallbacks = ['debug']
        }

        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "cryptoCompareApiKey", "2b08fe1dba559ca6acf5e1897b6de8749cee0ace6052d7aa7fccf6aa9f1b3255"
            resValue "string", "infuraProjectId", "2a1306f1d12f4c109a4d4fb9be46b02e"
            resValue "string", "infuraSecretKey", "fc479a9290b64a84a15fa6544a130218"
            resValue "string", "bscscanKey", "5ZGSHWYHZVA8XZHB8PF6UUTRNNB4KT43ZZ"
            resValue "string", "defiyieldProviderApiKey", "bc3a9319-b115-4673-ace9-03228c11d026"
            resValue "string", "is_release", "false"
            resValue "string", "guidesUrl", "https://github.com/0xLabWallet/0xwallet-android"
            resValue "string", "faqUrl", "https://github.com/0xLabWallet/0xwallet-android"
            resValue "string", "coinsJsonUrl", "https://raw.githubusercontent.com/DexSAFE/cryptocurrencies/master/coins.json"
            resValue "string", "providerCoinsJsonUrl", "https://raw.githubusercontent.com/DexSAFE/cryptocurrencies/master/provider.coins.json"
            resValue "string", "oneInchApiKey", "ElyK7s22HR0JD78CEXVPnpZA8UyuUwIl"
            resValue "string", "blockchairApiKey", "M___unstoppn7jfFpe40X___________"
            resValue "string", "twitterBearerToken", "AAAAAAAAAAAAAAAAAAAAAJgeNwEAAAAA6xVpR6xLKTrxIA3kkSyRA92LDpA%3Da6auybDwcymUyh2BcS6zZwicUdxGtrzJC0qvOSdRwKLeqBGhwB"
            resValue "string", "uniswapGraphUrl", "https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2"
            resValue "string", "etherscanKey", "IEXTB9RE7MUV2UQ9X238RP146IEJB1J5HS,27S4V3GYJGMCPWQZ2T4SF9355QBQYQ3FI7,YK4KEA3TANM8KZ5J6E2Q1ZIM6YDM8TEABM"
            resValue "string", "bscscanKey", "Z6CQA95IAZ4GTJMQRG426IZZCJREEDFE5I"
            resValue "string", "polygonscanKey", "P9QEQHXSYFKM9KHR2TH8BGRAQU6T3M7UA4,DMGHPTPSZCE4V4SYMWTIK29CC1RIDTN7U9"
            resValue "string", "snowtraceApiKey", "47IXTRAAFT1E1J4RNSPZPNB5EWUIQR16FG"
            resValue "string", "optimisticEtherscanApiKey", "745EUI4781T147M9QJRNS5G3Q5NFF2SJXP"
            resValue "string", "arbiscanApiKey", "4QWW522BV13BJCZMXH1JIB2ESJ7MZTSJYI"
            resValue "string", "gnosisscanApiKey", "KEXFAQKDUENZ5U9CW3ZKYJEJ84ZIHH9QTY"
            resValue "string", "ftmscanApiKey", "JAWRPW27KEMVXMJJ9UKY63CVPH3X5V9SMP"
            resValue "string", "basescanApiKey", "QU4RJVJXQCW812J3234EW9EV815TA6XC55"
            resValue "string", "marketApiBaseUrl", "https://api.blocksdecoded.com"
            resValue "string", "marketApiKey", "IQf1uAjkthZp1i2pYzkXFDom"
            resValue "string", "openSeaApiKey", "bfbd6061a33e455c8581b594774fecb3"
            resValue "string", "walletConnectV2Key", "0c5ca155c2f165a7d0c88686f2113a72"
            resValue "string", "solscanApiKey", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjcmVhdGVkQXQiOjE2Nzk0NjQxMTQ0ODUsImVtYWlsIjoiaHNkYW84ODg4QGdtYWlsLmNvbSIsImFjdGlvbiI6InRva2VuLWFwaSIsImlhdCI6MTY3OTQ2NDExNH0.91DUjjjYu86f1ZMMJ5cyJxIKTTw_srhI-vNgYaTCPUU"
            resValue "string", "trongridApiKeys", "8f5ae2c8-8012-42a8-b0ca-ffc2741f6a29,578aa64f-a79f-4ee8-86e9-e9860e2d050a,1e92f1fc-41f8-401f-a7f6-5b719b6f1280"
            resValue "string", "udnApiKey", "r2phzgatt_zt9-hd_wyvdjrdsrimnxgokm7knyag1malzgcz"
            resValue "string", "oneInchApiKey", "3EttyCzgWb2GLFIRoPIUYM0M4uKAVEcq"
            resValue "string", "blocksDecodedEthereumRpc", "https://api.blocksdecoded.com/v1/ethereum-rpc/mainnet"
            resValue "string", "is_release", "true"
        }

        appcenterrelease {
            initWith release
            defaultConfig.versionCode System.getenv("BUILD_NUMBER")?.toInteger() ?: defaultConfig.versionCode
            applicationIdSuffix ".appcenter"
            signingConfig signingConfigs.appCenter
            matchingFallbacks = ['release']
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        resources {
            pickFirsts += ['META-INF/atomicfu.kotlin_module']
            excludes += ['META-INF/INDEX.LIST', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE.md', 'META-INF/NOTICE.md']
        }
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    namespace 'com.monistoWallet'
    lint {
//        disable 'LogNotTimber'
        abortOnError false
        checkReleaseBuilds false
    }

    configurations.all { c ->
        c.resolutionStrategy.dependencySubstitution {
            substitute module('org.bouncycastle:bcprov-jdk15to18:1.68') using module('org.bouncycastle:bcprov-jdk15on:1.65')
            substitute module('com.google.protobuf:protobuf-java:3.6.1') using module('com.google.protobuf:protobuf-javalite:3.21.1')
            substitute module('net.jcip:jcip-annotations:1.0') using module('com.github.stephenc.jcip:jcip-annotations:1.0-1')

            substitute module('com.tinder.scarlet:scarlet:0.1.12') using module('com.github.WalletConnect.Scarlet:scarlet:1.0.0')
            substitute module('com.tinder.scarlet:websocket-okhttp:0.1.12') using module('com.github.WalletConnect.Scarlet:websocket-okhttp:1.0.0')
            substitute module('com.tinder.scarlet:stream-adapter-rxjava2:0.1.12') using module('com.github.WalletConnect.Scarlet:stream-adapter-rxjava2:1.0.0')
            substitute module('com.tinder.scarlet:message-adapter-gson:0.1.12') using module('com.github.WalletConnect.Scarlet:message-adapter-gson:1.0.0')
            substitute module('com.tinder.scarlet:lifecycle-android:0.1.12') using module('com.github.WalletConnect.Scarlet:lifecycle-android:1.0.0')
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.preference:preference-ktx:1.2.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    //Splash screen
    implementation "androidx.core:core-splashscreen:1.0.1"

    //AppWidgets
    implementation 'androidx.glance:glance-appwidget:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.compose.material3:material3-android:1.2.1'

    // Room
    def room_version = '2.5.2'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // alternately - if using Java8, use the following instead of compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    implementation 'androidx.recyclerview:recyclerview:1.3.1'

    implementation "com.google.android.material:material:$material_version"

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'com.squareup.okhttp3:okhttp-sse:4.12.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "androidx.biometric:biometric:$biometric_version"

    implementation 'com.atlassian.commonmark:commonmark:0.17.0'
    implementation "io.noties.markwon:core:4.6.2"

    // ViewPager circle indicator
    implementation 'me.relex:circleindicator:2.1.6'

    //Custom tabs, chrome
    implementation "androidx.browser:browser:1.6.0"

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_ktx_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ktx_version"

    //Compose Navigation
    implementation "androidx.navigation:navigation-compose:$navigation_ktx_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"

    api 'com.journeyapps:zxing-android-embedded:4.3.0'

    // WorkManager Kotlin
    def work_version = "2.8.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // WorkManager RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"

//    def leakCanary = 'com.squareup.leakcanary:leakcanary-android:2.10'
//    appcenterdebugImplementation leakCanary
//    debugImplementation leakCanary

    // Wallet kits
    implementation 'com.github.0xLabWallet:market-kit-0xwallet:1.0'
    implementation 'com.github.0xLabWallet:tron-kit-0xwallet:1.0'
    implementation 'com.github.0xLabWallet:solana-kit-0xwallet:1.0'
    implementation 'com.github.0xLabWallet:binance-chain-kit-0xwallet:1.0'
    implementation 'com.github.0xLabWallet:etherium-kit-0xwallet:1.2'
    implementation 'com.github.0xLabWallet:ton-kit-0xwallet:1.0'
    implementation 'com.github.0xLabWallet:blockchain-fee-rate-kit-0xwallet:1.0'
    implementation 'com.github.0xLabWallet:bitcoin-kit-0xwallet:1.0'

    // Zcash SDK
    implementation "cash.z.ecc.android:zcash-android-sdk:2.0.1"
    implementation("io.github.binance:binance-connector-java:3.0.0rc2") {
        exclude group: "org.bouncycastle", module: "bcprov-jdk18on"
    }

    // WalletConnect V2
    implementation(platform("com.walletconnect:android-bom:1.15.0"))
    implementation 'com.walletconnect:sign'
    implementation 'com.walletconnect:android-core'

    // Ethereum Name Service
    implementation "org.web3j:core:4.9.0"

    implementation 'com.twitter.twittertext:twitter-text:3.1.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.7.3'

    // UI modules

    implementation project(':core')
    implementation project(':components:icons')
    implementation project(':components:chartview')

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.8.0'
    // Compose Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Animations
    implementation "androidx.compose.animation:animation:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'

    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    def coil_version = "2.4.0"
    implementation "io.coil-kt:coil-compose:$coil_version"
    implementation "io.coil-kt:coil-svg:$coil_version"
    implementation("io.coil-kt:coil-gif:$coil_version")

    // When using a AppCompat theme
    implementation "com.google.accompanist:accompanist-appcompat-theme:$accompanist_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"

    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // optional - Test helpers for LiveData
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.6.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'

    // Spek
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.9"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.9"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Android Tor
    implementation 'info.guardianproject:tor-android:0.4.7.14'
    implementation 'info.guardianproject:jtorctl:0.4.5.7'

    //Lottie implement
    implementation "com.airbnb.android:lottie-compose:6.3.0"

    api 'com.jaredrummler:android-shell:1.0.0'
    api 'com.offbynull.portmapper:portmapper:2.0.5'

    // JSON Serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0")

    // Koin
    implementation "io.insert-koin:koin-core:3.4.2"
    implementation "io.insert-koin:koin-android:3.4.2"
    implementation "io.insert-koin:koin-androidx-compose:3.4.0"

    //View Pager
    implementation "com.google.accompanist:accompanist-pager:0.24.13-rc"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.24.13-rc"
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

// fixes reproducible builds (fixes difference in assets/dexopt/baseline.profm)
// more info https://issuetracker.google.com/issues/231837768
// remove after upgrading to 'com.android.tools.build:gradle:8.1.0' (AGP 8.1)
project.afterEvaluate {
    tasks.each { task ->
        if (task.name.startsWith("compile") && task.name.endsWith("ReleaseArtProfile")) {
            task.doLast {
                outputs.files.each { file ->
                    if (file.name.endsWith(".profm")) {
                        println("Sorting ${file} ...")
                        def version = ArtProfileSerializer.valueOf("METADATA_0_0_2")
                        def profile = ArtProfileKt.ArtProfile(file)
                        def keys = new ArrayList(profile.profileData.keySet())
                        def sortedData = new LinkedHashMap()
                        // xxx ignore not resolved classes; gradle can manage
                        Collections.sort keys, new DexFile.Companion()
                        keys.each { key -> sortedData[key] = profile.profileData[key] }
                        new FileOutputStream(file).with {
                            write(version.magicBytes$profgen)
                            write(version.versionBytes$profgen)
                            version.write$profgen(it, sortedData, "")
                        }
                    }
                }
            }
        }
    }
}